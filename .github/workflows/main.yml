# .github/workflows/main.yml
name: Android Appium E2E CI/CD

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'Android-App-for-Car-Parking-Project/**'
      - '.github/workflows/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'Android-App-for-Car-Parking-Project/**'
      - '.github/workflows/**'
  workflow_dispatch:

jobs:
  appium-android-test:
    name: Appium Android E2E
    runs-on: ubuntu-latest
    timeout-minutes: 40
    env:
      TEST_DURATION: 120

    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Create local.properties for Android
        working-directory: Android-App-for-Car-Parking-Project
        run: |
          echo "sdk.dir=$ANDROID_HOME" > local.properties
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties

      - name: Grant execute permission for gradlew
        working-directory: Android-App-for-Car-Parking-Project
        run: chmod +x ./gradlew

      - name: Build Debug APK
        working-directory: Android-App-for-Car-Parking-Project
        run: ./gradlew assembleDebug --stacktrace

      - name: Extract Android package name
        id: extract_package
        working-directory: Android-App-for-Car-Parking-Project
        run: |
          if [ -f "app/build.gradle.kts" ]; then
            PACKAGE_NAME=$(grep -E 'applicationId\s*=' app/build.gradle.kts \
              | sed -E 's/.*applicationId\s*=\s*"([^"]+)".*/\1/' \
              | head -1)
          elif [ -f "app/build.gradle" ]; then
            PACKAGE_NAME=$(grep -E 'applicationId\s+' app/build.gradle \
              | sed -E 's/.*applicationId\s+"([^"]+)".*/\1/' \
              | head -1)
          else
            echo "ERROR: Cannot find app/build.gradle(.kts)"
            exit 1
          fi
          if [ -z "$PACKAGE_NAME" ]; then
            PACKAGE_NAME="com.example.carparkingapp"
            echo "⚠️ Using fallback package: $PACKAGE_NAME"
          fi
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV

      - name: Set up Python for Appium tests
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          cache: pip

      - name: Install Python dependencies
        working-directory: Android-App-for-Car-Parking-Project/tests
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Set up Node.js & Appium
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: |
          npm install -g appium@latest
          appium driver install uiautomator2@latest

      - name: Verify Appium installation
        run: |
          node -v; npm -v
          which appium; appium -v

      - name: Create startup & test scripts
        working-directory: Android-App-for-Car-Parking-Project
        run: |
          chmod +x ../start_appium_and_test.sh e2e_test.sh

      - name: Run E2E Tests on Android Emulator
        uses: reactivecircus/android-emulator-runner@v2
        shell: bash
        with:
          api-level: 28
          arch: x86_64
          profile: pixel_2
          avd-name: pixel_2_api_28
          ram-size: 4096M
          heap-size: 1024M
          emulator-options: >-
            -no-window -gpu swiftshader_indirect -no-snapshot -noaudio
            -no-boot-anim -camera-back none -camera-front none -memory 4096
            -partition-size 4096
          disable-animations: true
        script: |
          echo "PWD: $(pwd)"
          echo "Contents:"
          ls -la
          bash ./start_appium_and_test.sh

      # ─────── Package & upload artifacts ───────
      - name: Package E2E artifacts
        if: always()
        run: |
          cd Android-App-for-Car-Parking-Project
          # ensure files exist
          touch test-report.html logcat.txt
          mkdir -p screenshots
          zip -rq e2e-artifacts.zip \
            test-report.html \
            ../appium.log \
            logcat.txt \
            screenshots \
            ../e2e_recording.mp4 \
            || echo "⚠️ Missing some artifacts, continuing."

      - name: Upload E2E artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-artifacts
          path: Android-App-for-Car-Parking-Project/e2e-artifacts.zip
          retention-days: 14
