name: Android App Test

on:
  push:
    branches: [ main ]
    paths:
      - 'Android-App-for-Car-Parking-Project/**'
      - '.github/workflows/main.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Android-App-for-Car-Parking-Project/**'
      - '.github/workflows/main.yml'
  workflow_dispatch:

jobs:
  android-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Initialize and update submodules
        run: |
          git submodule update --init --recursive
          git submodule status

      - name: Enable KVM
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-kvm

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_HOME" > Android-App-for-Car-Parking-Project/local.properties
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> Android-App-for-Car-Parking-Project/local.properties

      - name: Grant execute permission for gradlew
        run: chmod +x Android-App-for-Car-Parking-Project/gradlew

      - name: Build Debug APK
        working-directory: Android-App-for-Car-Parking-Project
        run: ./gradlew assembleDebug

      - name: Extract package name
        working-directory: Android-App-for-Car-Parking-Project
        run: |
          PACKAGE_NAME=$(grep -o "applicationId.*" app/build.gradle | cut -d'"' -f2)
          if [ -z "$PACKAGE_NAME" ]; then
            PACKAGE_NAME=$(grep -o "namespace.*" app/build.gradle | cut -d'"' -f2)
          fi
          echo "PACKAGE_NAME=$PACKAGE_NAME" >> $GITHUB_ENV

      - name: Create test script
        run: |
          cat > Android-App-for-Car-Parking-Project/test_script.sh << 'EOL'
          #!/bin/bash
          echo "Waiting for emulator to boot..."
          adb wait-for-device
          echo "Emulator booted."
          
          echo "Installing APK..."
          adb install -r app/build/outputs/apk/debug/app-debug.apk
          
          echo "Launching app..."
          adb shell monkey -p $PACKAGE_NAME -c android.intent.category.LAUNCHER 1
          
          echo "Taking screenshots..."
          sleep 20
          adb shell screencap -p /sdcard/screenshot_1.png
          adb pull /sdcard/screenshot_1.png
          
          sleep 20
          adb shell screencap -p /sdcard/screenshot_2.png
          adb pull /sdcard/screenshot_2.png
          
          sleep 20
          adb shell screencap -p /sdcard/screenshot_3.png
          adb pull /sdcard/screenshot_3.png
          
          echo "Stopping app..."
          adb shell am force-stop $PACKAGE_NAME
          EOL
          chmod +x Android-App-for-Car-Parking-Project/test_script.sh

      - name: Run app on emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          script: cd Android-App-for-Car-Parking-Project && ./test_script.sh

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: app-screenshots
          path: Android-App-for-Car-Parking-Project/screenshot_*.png
