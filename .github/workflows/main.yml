name: Car Parking App CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  backend-test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: parking_test
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r Backend-Implementation-for-Car-Parking-Project/requirements.txt
          pip install pytest psycopg2-binary

      - name: Run backend tests
        env:
          TESTING: "True"
          DB_HOST: localhost
          DB_PORT: 5432
          DB_NAME: parking_test
          DB_USER: postgres
          DB_PASSWORD: root
          JWT_SECRET_KEY: your-secret-key-here
        run: |
          cd Backend-Implementation-for-Car-Parking-Project
          pytest --verbose

  android-build:
    needs: backend-test
    runs-on: ubuntu-latest
    timeout-minutes: 20
    env:
      API_BASE_URL: "http://10.0.2.2:5000/"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: gradle

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Create local.properties
        run: |
          cd Android-App-for-Car-Parking-Project
          echo "sdk.dir=$ANDROID_HOME" > local.properties
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> local.properties
          echo "API_BASE_URL=${{ env.API_BASE_URL }}" >> local.properties

      - name: Build Debug APK
        run: |
          cd Android-App-for-Car-Parking-Project
          chmod +x ./gradlew
          ./gradlew assembleDebug --stacktrace
        env:
          ANDROID_HOME: ${{ secrets.ANDROID_HOME }}
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
          API_BASE_URL: ${{ env.API_BASE_URL }}

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: Android-App-for-Car-Parking-Project/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 1

  e2e-test:
    needs: [backend-test, android-build]
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install Appium-Python-Client pytest selenium

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: app-debug
          path: Android-App-for-Car-Parking-Project/app/build/outputs/apk/debug/

      - name: Start Appium server
        run: |
          npm install -g appium
          appium --base-path /wd/hub &
          sleep 10

      - name: Run Appium tests
        env:
          APPIUM_HOST: localhost
          APPIUM_PORT: 4723
          ANDROID_DEVICE_NAME: Android Emulator
          ANDROID_PLATFORM_VERSION: 28
          ANDROID_APP_PACKAGE: com.example.carparkingapp
          ANDROID_APP_ACTIVITY: com.example.carparkingapp.MainActivity
        run: |
          cd Android-App-for-Car-Parking-Project/tests
          pytest test_parking_app.py -v

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: Android-App-for-Car-Parking-Project/tests/test-results/
          retention-days: 7
