name: Android App Test

on:
  push:
    branches: [ main ]
    paths:
      - 'Android-App-for-Car-Parking-Project/**'
      - '.github/workflows/main.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'Android-App-for-Car-Parking-Project/**'
      - '.github/workflows/main.yml'
  workflow_dispatch:

jobs:
  android-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Initialize and update submodules
        run: |
          git submodule update --init --recursive
          git submodule status

      - name: Enable KVM
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-kvm
          sudo chmod 666 /dev/kvm

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Create local.properties
        run: |
          echo "sdk.dir=$ANDROID_HOME" > Android-App-for-Car-Parking-Project/local.properties
          echo "ndk.dir=$ANDROID_HOME/ndk-bundle" >> Android-App-for-Car-Parking-Project/local.properties
          echo "MAPS_API_KEY=${{ secrets.MAPS_API_KEY }}" >> Android-App-for-Car-Parking-Project/local.properties

      - name: Grant execute permission for gradlew
        run: chmod +x Android-App-for-Car-Parking-Project/gradlew

      - name: Build Debug APK
        run: |
          cd Android-App-for-Car-Parking-Project
          ./gradlew assembleDebug
        env:
          MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}

      - name: Extract package name
        id: package-name
        run: |
          cd Android-App-for-Car-Parking-Project
          PACKAGE_NAME=$(./gradlew printPackageName | grep "packageName:" | cut -d' ' -f2)
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT

      - name: Create test script
        run: |
          cat > test_script.sh << 'EOF'
          #!/bin/bash
          set -e
          
          # Wait for emulator to boot
          adb wait-for-device
          echo "Emulator is ready"
          
          # Install APK
          adb install -r app/build/outputs/apk/debug/app-debug.apk
          echo "APK installed"
          
          # Launch app
          adb shell monkey -p $PACKAGE_NAME -c android.intent.category.LAUNCHER 1
          echo "App launched"
          
          # Run for 60 seconds
          for i in {1..3}; do
            sleep 20
            adb shell screencap -p /sdcard/screenshot_$i.png
            adb pull /sdcard/screenshot_$i.png
            echo "Screenshot $i taken"
          done
          
          # Stop app
          adb shell am force-stop $PACKAGE_NAME
          echo "App stopped"
          EOF
          chmod +x test_script.sh

      - name: Run app on emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 33
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          script: ./test_script.sh
          working-directory: Android-App-for-Car-Parking-Project

      - name: Upload screenshots
        uses: actions/upload-artifact@v4
        with:
          name: app-screenshots
          path: Android-App-for-Car-Parking-Project/screenshot_*.png
          if-no-files-found: error
